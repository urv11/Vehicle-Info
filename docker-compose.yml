#version: '3'
#
#services:
#
# docker-mysql:
#
#    restart: always
#
#    container_name: docker-vi-mysql
#
#    image: mysql
#    
#    platform: linux/amd64
#    
#
#    environment:
#
#      MYSQL_DATABASE: db
#      
#      MYSQL_ROOT_PASSWORD: urvsql123
#
#      MYSQL_ROOT_HOST: root
#
#    volumes:
#
#      - ./sql:/docker-entrypoint-initdb.d
#
#
#    ports:
#
#      - "6033:3306"
#
#    healthcheck:
#
#      test: "/usr/bin/mysql --user=root --password=urvsql123--execute \"SHOW DATABASES;\""
#
#      interval: 2s
#
#      timeout: 20s
#
#      retries: 10
#      
#      
#      
#
#   
#
# springboot-introduction-app:
#
#    restart: on-failure
#    
#    build: ./
#
#    expose:
#
#      - "9000"
#
#    ports:
#
#      - 9000:9000
#
#    environment:
#  
#    
#      WAIT_HOSTS: mysql:3306
#
#    depends_on:
#
#      - docker-mysql


# version: "2.1"
# services:
#   web-service:
#     build:
#       context: ./
#       dockerfile: Dockerfile
#     restart: always
#     ports:
#       - "9000:9000"
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:mysql://vi-db:3306/db
#     networks:
#       - vi-mysql
#     depends_on:
#       vi-db:
#           condition: service_healthy

#   vi-db:
#     image: mysql
#     networks:
#       - vi-mysql
#     environment:
#       - MYSQL_ROOT_PASSWORD=root
#       - MYSQL_PASSWORD=urvsql123
#       - MYSQL_DATABASE=db
#     healthcheck:
#       test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
#       timeout: 20s
#       retries: 2

# networks:
#   vi-mysql:

  # Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: ./ # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "9080:9080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/dockerdb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: test
      SPRING_DATASOURCE_PASSWORD: test     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      
  
  # Database Service (Mysql)
  db:
    image: mysql
    ports:
      - "3308:3306"
    restart: always
    environment:
      MYSQL_DATABASE: dockerdb
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: db12311!
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:    